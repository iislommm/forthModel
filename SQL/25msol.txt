CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY IDENTITY,
    Name NVARCHAR(100),
    Email NVARCHAR(100)
);

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY IDENTITY,
    CustomerID INT FOREIGN KEY REFERENCES Customers(CustomerID),
    OrderDate DATETIME DEFAULT GETDATE()
);
CREATE TABLE Products (
    ProductID INT PRIMARY KEY IDENTITY,
    Name NVARCHAR(100),
    Price DECIMAL(10,2)
	);

CREATE TABLE OrderItems (
    OrderItemID INT PRIMARY KEY IDENTITY,
    OrderID INT FOREIGN KEY REFERENCES Orders(OrderID),
    ProductID INT FOREIGN KEY REFERENCES Products(ProductID),
    Quantity INT,
    Price DECIMAL(10,2)
);

INSERT INTO Customers (Name, Email) VALUES
('John Doe', 'john.doe@email.com'),
('Alice Smith', 'alice.smith@email.com'),
('Bob Johnson', 'bob.johnson@email.com'),
('Emma Brown', 'emma.brown@email.com'),
('James Wilson', 'james.wilson@email.com'),
('Olivia Martinez', 'olivia.martinez@email.com'),
('Liam Garcia', 'liam.garcia@email.com'),
('Sophia Lee', 'sophia.lee@email.com'),
('Mason Hall', 'mason.hall@email.com'),
('Isabella Allen', 'isabella.allen@email.com'),
('Ethan Young', 'ethan.young@email.com'),
('Ava King', 'ava.king@email.com'),
('Michael Wright', 'michael.wright@email.com'),
('Charlotte Scott', 'charlotte.scott@email.com'),
('Daniel Green', 'daniel.green@email.com'),
('Harper Adams', 'harper.adams@email.com'),
('Benjamin Baker', 'benjamin.baker@email.com'),
('Amelia Gonzalez', 'amelia.gonzalez@email.com'),
('Lucas Nelson', 'lucas.nelson@email.com'),
('Mia Carter', 'mia.carter@email.com');

INSERT INTO Products (Name, Price) VALUES
('Laptop', 1200.00),
('Smartphone', 800.00),
('Headphones', 150.00),
('Smartwatch', 250.00),
('Keyboard', 50.00),
('Mouse', 30.00),
('Monitor', 300.00),
('External HDD', 100.00),
('Gaming Chair', 400.00),
('Desk Lamp', 40.00),
('USB Flash Drive', 20.00),
('Wireless Router', 120.00),
('Graphics Card', 500.00),
('Power Bank', 70.00),
('Webcam', 60.00),
('Microphone', 110.00),
('VR Headset', 700.00),
('Portable Speaker', 90.00),
('Coffee Maker', 130.00),
('Fitness Tracker', 200.00);

INSERT INTO Orders (CustomerID, OrderDate) VALUES
(1, '2024-01-15'),
(2, '2024-01-20'),
(3, '2024-02-05'),
(4, '2024-02-10'),
(5, '2024-02-15'),
(6, '2024-02-20'),
(7, '2024-03-05'),
(8, '2024-03-10'),
(9, '2024-03-15'),
(10, '2024-03-20'),
(11, '2024-04-05'),
(12, '2024-04-10'),
(13, '2024-04-15'),
(14, '2024-04-20'),
(15, '2024-05-05'),
(16, '2024-05-10'),
(17, '2024-05-15'),
(18, '2024-05-20');


INSERT INTO OrderItems (OrderID, ProductID, Quantity, Price) VALUES
(1, 1, 1, 1200.00), 
(1, 2, 2, 800.00),
(2, 3, 3, 150.00),
(2, 4, 1, 250.00),
(3, 5, 2, 50.00),
(3, 6, 1, 30.00),
(4, 7, 1, 300.00),
(4, 8, 2, 100.00),
(5, 9, 1, 400.00),
(5, 10, 3, 40.00),
(6, 11, 4, 20.00),
(6, 12, 1, 120.00),
(7, 13, 1, 500.00),
(7, 14, 2, 70.00),
(8, 15, 1, 60.00),
(8, 16, 1, 110.00),
(9, 17, 1, 700.00),
(9, 18, 2, 90.00),
(10, 19, 1, 130.00),
(10, 20, 3, 200.00);

--0
SELECT c.CustomerID, c.Name, COUNT(o.OrderID) AS OrderCount
FROM Customers c
LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID, c.Name;

--1
SELECT c.CustomerID, c.Name, SUM(oi.Quantity) AS TotalQuantity
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN OrderItems oi ON o.OrderID = oi.OrderID
GROUP BY c.CustomerID, c.Name;

--2
SELECT c.CustomerID, c.Name, SUM(oi.Quantity * oi.Price) AS TotalSpent
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN OrderItems oi ON o.OrderID = oi.OrderID
GROUP BY c.CustomerID, c.Name;

--3
SELECT TOP 1 p.ProductID, p.Name, p.Price
FROM Products p
ORDER BY p.Price DESC;

--4
SELECT * FROM Orders
WHERE OrderDate >= DATEADD(DAY, -30, GETDATE());

--5
SELECT TOP 1 c.CustomerID, c.Name, COUNT(o.OrderID) AS OrderCount
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID, c.Name
ORDER BY OrderCount DESC;

--6
SELECT p.ProductID, p.Name
FROM Products p
LEFT JOIN OrderItems oi ON p.ProductID = oi.ProductID
WHERE oi.ProductID IS NULL;

--7
SELECT p.ProductID, p.Name, SUM(oi.Quantity * oi.Price) AS TotalRevenue
FROM Products p
JOIN OrderItems oi ON p.ProductID = oi.ProductID
GROUP BY p.ProductID, p.Name;

--8
SELECT c.CustomerID, c.Name, COUNT(o.OrderID) AS OrderCount
FROM Customers c
LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID, c.Name;

--9
SELECT c.CustomerID, c.Name
FROM Customers c
LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
WHERE o.OrderID IS NULL;

--10
SELECT TOP 5 * FROM Products
ORDER BY Price DESC;

--11
SELECT TOP 3 c.CustomerID, c.Name, SUM(oi.Quantity * oi.Price) AS TotalSpent
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN OrderItems oi ON o.OrderID = oi.OrderID
GROUP BY c.CustomerID, c.Name
ORDER BY TotalSpent DESC;

--12
SELECT o.OrderID, c.Name, SUM(oi.Quantity) AS TotalProducts
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID
JOIN OrderItems oi ON o.OrderID = oi.OrderID
GROUP BY o.OrderID, c.Name;

--13
SELECT c.CustomerID, c.Name, SUM(oi.Quantity) AS TotalQuantity
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN OrderItems oi ON o.OrderID = oi.OrderID
GROUP BY c.CustomerID, c.Name
HAVING SUM(oi.Quantity) > 5;


--14
SELECT TOP 1 p.ProductID, p.Name, SUM(oi.Quantity) AS TotalOrdered
FROM Products p
JOIN OrderItems oi ON p.ProductID = oi.ProductID
GROUP BY p.ProductID, p.Name
ORDER BY TotalOrdered DESC;

--15
SELECT MONTH(OrderDate) AS Month, COUNT(OrderID) AS TotalOrders
FROM Orders
WHERE YEAR(OrderDate) = 2024
GROUP BY MONTH(OrderDate)
ORDER BY Month;

--16
SELECT TOP 1 c.CustomerID, c.Name, SUM(oi.Quantity * oi.Price) AS TotalSpent
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN OrderItems oi ON o.OrderID = oi.OrderID
GROUP BY c.CustomerID, c.Name
ORDER BY TotalSpent DESC;

--17
SELECT p.ProductID, p.Name, SUM(oi.Quantity) AS TotalSold
FROM Products p
JOIN OrderItems oi ON p.ProductID = oi.ProductID
GROUP BY p.ProductID, p.Name
ORDER BY TotalSold DESC;

--18
SELECT c.CustomerID, c.Name, SUM(oi.Quantity * oi.Price) AS TotalSpent
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN OrderItems oi ON o.OrderID = oi.OrderID
GROUP BY c.CustomerID, c.Name
HAVING SUM(oi.Quantity * oi.Price) > 500;


--19
SELECT AVG(ProductCount) AS AvgProductsPerOrder
FROM (
    SELECT o.OrderID, SUM(oi.Quantity) AS ProductCount
    FROM Orders o
    JOIN OrderItems oi ON o.OrderID = oi.OrderID
    GROUP BY o.OrderID
) AS OrderProductCounts;

--20
SELECT o.OrderID, SUM(oi.Quantity * oi.Price) AS TotalOrderValue
FROM Orders o
JOIN OrderItems oi ON o.OrderID = oi.OrderID
GROUP BY o.OrderID
HAVING SUM(oi.Quantity * oi.Price) > 1000;

--21
SELECT TOP 1 o.OrderID, o.OrderDate
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID
WHERE c.Name = 'Alice Smith'
ORDER BY o.OrderDate DESC;

--22
SELECT p.Name, SUM(oi.Quantity) AS TotalOrdered
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN OrderItems oi ON o.OrderID = oi.OrderID
JOIN Products p ON oi.ProductID = p.ProductID
WHERE c.Name = 'John Doe'
GROUP BY p.Name
ORDER BY TotalOrdered DESC;

--23
SELECT c.CustomerID, c.Name, COUNT(o.OrderID) AS TotalOrders, SUM(oi.Quantity) AS TotalProducts
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN OrderItems oi ON o.OrderID = oi.OrderID
WHERE YEAR(o.OrderDate) = 2024
GROUP BY c.CustomerID, c.Name;

--24
SELECT p.ProductID, p.Name, p.Price, SUM(oi.Quantity) AS TotalSold, SUM(oi.Quantity * oi.Price) AS TotalRevenue
FROM Products p
JOIN OrderItems oi ON p.ProductID = oi.ProductID
GROUP BY p.ProductID, p.Name, p.Price
ORDER BY TotalRevenue DESC;

--25
SELECT p.Name, SUM(oi.Quantity) AS TotalSold, SUM(oi.Quantity * oi.Price) AS TotalRevenue
FROM Orders o
JOIN OrderItems oi ON o.OrderID = oi.OrderID
JOIN Products p ON oi.ProductID = p.ProductID
WHERE o.OrderDate >= DATEADD(DAY, -7, GETDATE()) 
GROUP BY p.Name
ORDER BY TotalRevenue DESC;

